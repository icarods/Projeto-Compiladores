Package simpleAdder; 
     
Helpers   
   	dig = ['0'..'9'];
   	letra = [['a'..'z']+['A'..'Z']];
   	character = [0..0xffff];
   	nl = '\n';
   	lf = 10; 
   	tab = 9; 
   	cr = 13;
   	charc_sem_ast = [character - '*']*;
   	charc_sem_ast_barra = [character - ['*' + '/']];
	
States
	normal, comment;
    
Tokens
	{normal} num = dig(dig|dig)*;
	{normal} id = letra(letra|letra)*;
	{normal} se = 'if';
	{normal} enq = 'while';
	{normal} senao = 'else';
	{normal} inteiro = 'int';
	{normal} retorno = 'return';
	{normal} vazio = 'void';
	{normal} add = '+';
 	{normal} sub = '-';
 	{normal} mult = '*';
 	{normal} div = '/';
 	{normal} menor = '<';
 	{normal} maior = '>';
 	{normal} menor_igl = '<=';
 	{normal} maior_igl = '>=';
 	{normal} igl = '==';
 	{normal} dif = '!=';
 	{normal} atr = '=';
 	{normal} par_es = '(';
 	{normal} par_dir = ')';
 	{normal} chaves_dir = '{';
 	{normal} chaves_esq = '}';
        {normal} ponto_vrg = ';';
    	{normal} virgula = ',';
	{normal} branco = (' ' | lf | tab | cr)+;
	{normal} comentario_ln = '//' character nl;
	
	{normal->comment, comment}
          inicio_comentario_aninhado = '/*';
          
          {comment} fim_comentario_aninhado = '*'+ '/';
          {comment} texto_comentario = [character -['*' + '/']]*;
          {comment} star = '*';
          {comment} slash = '/';
	
Ignored Tokens
 	branco, comentario_ln, inicio_comentario_aninhado, fim_comentario_aninhado, texto_comentario;
